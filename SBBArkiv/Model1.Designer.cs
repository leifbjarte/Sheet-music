//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SBBArchive", "MusicPartSheetMusic_MusicPart", "MusicPart", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SBBArkiv.MusicPart), "SheetMusic_MusicPart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SBBArkiv.SheetMusicPart), true)]
[assembly: EdmRelationshipAttribute("SBBArchive", "SheetMusic_MusicPartSheetMusic", "SheetMusic_MusicPart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SBBArkiv.SheetMusicPart), "SheetMusic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SBBArkiv.SheetMusic), true)]
[assembly: EdmRelationshipAttribute("SBBArchive", "UserMusicPart", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SBBArkiv.User), "MusicPart", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SBBArkiv.MusicPart))]
[assembly: EdmRelationshipAttribute("SBBArchive", "SheetMusicCategorySheetMusic", "SheetMusicCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SBBArkiv.SheetMusicCategory), "SheetMusic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SBBArkiv.SheetMusic), true)]
[assembly: EdmRelationshipAttribute("SBBArchive", "UserGroupUser", "UserGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SBBArkiv.UserGroup), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SBBArkiv.User), true)]

#endregion

namespace SBBArkiv
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MusicArchiveContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MusicArchiveContext object using the connection string found in the 'MusicArchiveContext' section of the application configuration file.
        /// </summary>
        public MusicArchiveContext() : base("name=MusicArchiveContext", "MusicArchiveContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MusicArchiveContext object.
        /// </summary>
        public MusicArchiveContext(string connectionString) : base(connectionString, "MusicArchiveContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MusicArchiveContext object.
        /// </summary>
        public MusicArchiveContext(EntityConnection connection) : base(connection, "MusicArchiveContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SheetMusic> SheetMusic
        {
            get
            {
                if ((_SheetMusic == null))
                {
                    _SheetMusic = base.CreateObjectSet<SheetMusic>("SheetMusic");
                }
                return _SheetMusic;
            }
        }
        private ObjectSet<SheetMusic> _SheetMusic;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MusicPart> MusicParts
        {
            get
            {
                if ((_MusicParts == null))
                {
                    _MusicParts = base.CreateObjectSet<MusicPart>("MusicParts");
                }
                return _MusicParts;
            }
        }
        private ObjectSet<MusicPart> _MusicParts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SheetMusicPart> SheetMusicParts
        {
            get
            {
                if ((_SheetMusicParts == null))
                {
                    _SheetMusicParts = base.CreateObjectSet<SheetMusicPart>("SheetMusicParts");
                }
                return _SheetMusicParts;
            }
        }
        private ObjectSet<SheetMusicPart> _SheetMusicParts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SheetMusicCategory> SheetMusicCategories
        {
            get
            {
                if ((_SheetMusicCategories == null))
                {
                    _SheetMusicCategories = base.CreateObjectSet<SheetMusicCategory>("SheetMusicCategories");
                }
                return _SheetMusicCategories;
            }
        }
        private ObjectSet<SheetMusicCategory> _SheetMusicCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserGroup> UserGroups
        {
            get
            {
                if ((_UserGroups == null))
                {
                    _UserGroups = base.CreateObjectSet<UserGroup>("UserGroups");
                }
                return _UserGroups;
            }
        }
        private ObjectSet<UserGroup> _UserGroups;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SheetMusic EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSheetMusic(SheetMusic sheetMusic)
        {
            base.AddObject("SheetMusic", sheetMusic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MusicParts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMusicParts(MusicPart musicPart)
        {
            base.AddObject("MusicParts", musicPart);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SheetMusicParts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSheetMusicParts(SheetMusicPart sheetMusicPart)
        {
            base.AddObject("SheetMusicParts", sheetMusicPart);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SheetMusicCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSheetMusicCategories(SheetMusicCategory sheetMusicCategory)
        {
            base.AddObject("SheetMusicCategories", sheetMusicCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserGroups(UserGroup userGroup)
        {
            base.AddObject("UserGroups", userGroup);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SBBArchive", Name="MusicPart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MusicPart : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MusicPart object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="partName">Initial value of the PartName property.</param>
        public static MusicPart CreateMusicPart(global::System.Int32 id, global::System.String partName)
        {
            MusicPart musicPart = new MusicPart();
            musicPart.Id = id;
            musicPart.PartName = partName;
            return musicPart;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartName
        {
            get
            {
                return _PartName;
            }
            set
            {
                OnPartNameChanging(value);
                ReportPropertyChanging("PartName");
                _PartName = StructuralObject.SetValidValue(value, false, "PartName");
                ReportPropertyChanged("PartName");
                OnPartNameChanged();
            }
        }
        private global::System.String _PartName;
        partial void OnPartNameChanging(global::System.String value);
        partial void OnPartNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Aliases
        {
            get
            {
                return _Aliases;
            }
            set
            {
                OnAliasesChanging(value);
                ReportPropertyChanging("Aliases");
                _Aliases = StructuralObject.SetValidValue(value, true, "Aliases");
                ReportPropertyChanged("Aliases");
                OnAliasesChanged();
            }
        }
        private global::System.String _Aliases;
        partial void OnAliasesChanging(global::System.String value);
        partial void OnAliasesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SBBArchive", "MusicPartSheetMusic_MusicPart", "SheetMusic_MusicPart")]
        public EntityCollection<SheetMusicPart> SheetMusicParts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SheetMusicPart>("SBBArchive.MusicPartSheetMusic_MusicPart", "SheetMusic_MusicPart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SheetMusicPart>("SBBArchive.MusicPartSheetMusic_MusicPart", "SheetMusic_MusicPart", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SBBArchive", "UserMusicPart", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SBBArchive.UserMusicPart", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SBBArchive.UserMusicPart", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SBBArchive", Name="SheetMusic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SheetMusic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SheetMusic object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="hasBeenScanned">Initial value of the HasBeenScanned property.</param>
        public static SheetMusic CreateSheetMusic(global::System.Int32 id, global::System.String title, global::System.Boolean hasBeenScanned)
        {
            SheetMusic sheetMusic = new SheetMusic();
            sheetMusic.Id = id;
            sheetMusic.Title = title;
            sheetMusic.HasBeenScanned = hasBeenScanned;
            return sheetMusic;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Composer
        {
            get
            {
                return _Composer;
            }
            set
            {
                OnComposerChanging(value);
                ReportPropertyChanging("Composer");
                _Composer = StructuralObject.SetValidValue(value, true, "Composer");
                ReportPropertyChanged("Composer");
                OnComposerChanged();
            }
        }
        private global::System.String _Composer;
        partial void OnComposerChanging(global::System.String value);
        partial void OnComposerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Arranger
        {
            get
            {
                return _Arranger;
            }
            set
            {
                OnArrangerChanging(value);
                ReportPropertyChanging("Arranger");
                _Arranger = StructuralObject.SetValidValue(value, true, "Arranger");
                ReportPropertyChanged("Arranger");
                OnArrangerChanged();
            }
        }
        private global::System.String _Arranger;
        partial void OnArrangerChanging(global::System.String value);
        partial void OnArrangerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SheetMusicCategoryId
        {
            get
            {
                return _SheetMusicCategoryId;
            }
            set
            {
                OnSheetMusicCategoryIdChanging(value);
                ReportPropertyChanging("SheetMusicCategoryId");
                _SheetMusicCategoryId = StructuralObject.SetValidValue(value, "SheetMusicCategoryId");
                ReportPropertyChanged("SheetMusicCategoryId");
                OnSheetMusicCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SheetMusicCategoryId;
        partial void OnSheetMusicCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnSheetMusicCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SoleSellingAgent
        {
            get
            {
                return _SoleSellingAgent;
            }
            set
            {
                OnSoleSellingAgentChanging(value);
                ReportPropertyChanging("SoleSellingAgent");
                _SoleSellingAgent = StructuralObject.SetValidValue(value, true, "SoleSellingAgent");
                ReportPropertyChanged("SoleSellingAgent");
                OnSoleSellingAgentChanged();
            }
        }
        private global::System.String _SoleSellingAgent;
        partial void OnSoleSellingAgentChanging(global::System.String value);
        partial void OnSoleSellingAgentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MissingParts
        {
            get
            {
                return _MissingParts;
            }
            set
            {
                OnMissingPartsChanging(value);
                ReportPropertyChanging("MissingParts");
                _MissingParts = StructuralObject.SetValidValue(value, true, "MissingParts");
                ReportPropertyChanged("MissingParts");
                OnMissingPartsChanged();
            }
        }
        private global::System.String _MissingParts;
        partial void OnMissingPartsChanging(global::System.String value);
        partial void OnMissingPartsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasBeenScanned
        {
            get
            {
                return _HasBeenScanned;
            }
            set
            {
                OnHasBeenScannedChanging(value);
                ReportPropertyChanging("HasBeenScanned");
                _HasBeenScanned = StructuralObject.SetValidValue(value, "HasBeenScanned");
                ReportPropertyChanged("HasBeenScanned");
                OnHasBeenScannedChanged();
            }
        }
        private global::System.Boolean _HasBeenScanned;
        partial void OnHasBeenScannedChanging(global::System.Boolean value);
        partial void OnHasBeenScannedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ArchiveFileName
        {
            get
            {
                return _ArchiveFileName;
            }
            set
            {
                OnArchiveFileNameChanging(value);
                ReportPropertyChanging("ArchiveFileName");
                _ArchiveFileName = StructuralObject.SetValidValue(value, true, "ArchiveFileName");
                ReportPropertyChanged("ArchiveFileName");
                OnArchiveFileNameChanged();
            }
        }
        private global::System.String _ArchiveFileName;
        partial void OnArchiveFileNameChanging(global::System.String value);
        partial void OnArchiveFileNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SBBArchive", "SheetMusic_MusicPartSheetMusic", "SheetMusic_MusicPart")]
        public EntityCollection<SheetMusicPart> SheetMusicParts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SheetMusicPart>("SBBArchive.SheetMusic_MusicPartSheetMusic", "SheetMusic_MusicPart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SheetMusicPart>("SBBArchive.SheetMusic_MusicPartSheetMusic", "SheetMusic_MusicPart", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SBBArchive", "SheetMusicCategorySheetMusic", "SheetMusicCategory")]
        public SheetMusicCategory SheetMusicCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SheetMusicCategory>("SBBArchive.SheetMusicCategorySheetMusic", "SheetMusicCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SheetMusicCategory>("SBBArchive.SheetMusicCategorySheetMusic", "SheetMusicCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SheetMusicCategory> SheetMusicCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SheetMusicCategory>("SBBArchive.SheetMusicCategorySheetMusic", "SheetMusicCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SheetMusicCategory>("SBBArchive.SheetMusicCategorySheetMusic", "SheetMusicCategory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SBBArchive", Name="SheetMusicCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SheetMusicCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SheetMusicCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        public static SheetMusicCategory CreateSheetMusicCategory(global::System.Int32 id, global::System.String name, global::System.Boolean inactive)
        {
            SheetMusicCategory sheetMusicCategory = new SheetMusicCategory();
            sheetMusicCategory.Id = id;
            sheetMusicCategory.Name = name;
            sheetMusicCategory.Inactive = inactive;
            return sheetMusicCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value, "Inactive");
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SBBArchive", "SheetMusicCategorySheetMusic", "SheetMusic")]
        public EntityCollection<SheetMusic> SheetMusic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SheetMusic>("SBBArchive.SheetMusicCategorySheetMusic", "SheetMusic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SheetMusic>("SBBArchive.SheetMusicCategorySheetMusic", "SheetMusic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SBBArchive", Name="SheetMusicPart")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SheetMusicPart : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SheetMusicPart object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="musicPartId">Initial value of the MusicPartId property.</param>
        /// <param name="sheetMusicId">Initial value of the SheetMusicId property.</param>
        public static SheetMusicPart CreateSheetMusicPart(global::System.Int32 id, global::System.Int32 musicPartId, global::System.Int32 sheetMusicId)
        {
            SheetMusicPart sheetMusicPart = new SheetMusicPart();
            sheetMusicPart.Id = id;
            sheetMusicPart.MusicPartId = musicPartId;
            sheetMusicPart.SheetMusicId = sheetMusicId;
            return sheetMusicPart;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MusicPartId
        {
            get
            {
                return _MusicPartId;
            }
            set
            {
                OnMusicPartIdChanging(value);
                ReportPropertyChanging("MusicPartId");
                _MusicPartId = StructuralObject.SetValidValue(value, "MusicPartId");
                ReportPropertyChanged("MusicPartId");
                OnMusicPartIdChanged();
            }
        }
        private global::System.Int32 _MusicPartId;
        partial void OnMusicPartIdChanging(global::System.Int32 value);
        partial void OnMusicPartIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SheetMusicId
        {
            get
            {
                return _SheetMusicId;
            }
            set
            {
                OnSheetMusicIdChanging(value);
                ReportPropertyChanging("SheetMusicId");
                _SheetMusicId = StructuralObject.SetValidValue(value, "SheetMusicId");
                ReportPropertyChanged("SheetMusicId");
                OnSheetMusicIdChanged();
            }
        }
        private global::System.Int32 _SheetMusicId;
        partial void OnSheetMusicIdChanging(global::System.Int32 value);
        partial void OnSheetMusicIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SBBArchive", "MusicPartSheetMusic_MusicPart", "MusicPart")]
        public MusicPart MusicPart
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MusicPart>("SBBArchive.MusicPartSheetMusic_MusicPart", "MusicPart").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MusicPart>("SBBArchive.MusicPartSheetMusic_MusicPart", "MusicPart").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MusicPart> MusicPartReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MusicPart>("SBBArchive.MusicPartSheetMusic_MusicPart", "MusicPart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MusicPart>("SBBArchive.MusicPartSheetMusic_MusicPart", "MusicPart", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SBBArchive", "SheetMusic_MusicPartSheetMusic", "SheetMusic")]
        public SheetMusic SheetMusic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SheetMusic>("SBBArchive.SheetMusic_MusicPartSheetMusic", "SheetMusic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SheetMusic>("SBBArchive.SheetMusic_MusicPartSheetMusic", "SheetMusic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SheetMusic> SheetMusicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SheetMusic>("SBBArchive.SheetMusic_MusicPartSheetMusic", "SheetMusic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SheetMusic>("SBBArchive.SheetMusic_MusicPartSheetMusic", "SheetMusic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SBBArchive", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="inactive">Initial value of the Inactive property.</param>
        /// <param name="userGroupId">Initial value of the UserGroupId property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String name, global::System.String email, global::System.Boolean inactive, global::System.Int32 userGroupId)
        {
            User user = new User();
            user.Id = id;
            user.Name = name;
            user.Email = email;
            user.Inactive = inactive;
            user.UserGroupId = userGroupId;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Inactive
        {
            get
            {
                return _Inactive;
            }
            set
            {
                OnInactiveChanging(value);
                ReportPropertyChanging("Inactive");
                _Inactive = StructuralObject.SetValidValue(value, "Inactive");
                ReportPropertyChanged("Inactive");
                OnInactiveChanged();
            }
        }
        private global::System.Boolean _Inactive;
        partial void OnInactiveChanging(global::System.Boolean value);
        partial void OnInactiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserGroupId
        {
            get
            {
                return _UserGroupId;
            }
            set
            {
                OnUserGroupIdChanging(value);
                ReportPropertyChanging("UserGroupId");
                _UserGroupId = StructuralObject.SetValidValue(value, "UserGroupId");
                ReportPropertyChanged("UserGroupId");
                OnUserGroupIdChanged();
            }
        }
        private global::System.Int32 _UserGroupId;
        partial void OnUserGroupIdChanging(global::System.Int32 value);
        partial void OnUserGroupIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SBBArchive", "UserMusicPart", "MusicPart")]
        public EntityCollection<MusicPart> MusicParts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MusicPart>("SBBArchive.UserMusicPart", "MusicPart");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MusicPart>("SBBArchive.UserMusicPart", "MusicPart", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SBBArchive", "UserGroupUser", "UserGroup")]
        public UserGroup UserGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserGroup>("SBBArchive.UserGroupUser", "UserGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserGroup>("SBBArchive.UserGroupUser", "UserGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserGroup> UserGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserGroup>("SBBArchive.UserGroupUser", "UserGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserGroup>("SBBArchive.UserGroupUser", "UserGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SBBArchive", Name="UserGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static UserGroup CreateUserGroup(global::System.Int32 id, global::System.String name)
        {
            UserGroup userGroup = new UserGroup();
            userGroup.Id = id;
            userGroup.Name = name;
            return userGroup;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SBBArchive", "UserGroupUser", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("SBBArchive.UserGroupUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("SBBArchive.UserGroupUser", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
